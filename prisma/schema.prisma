// schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(uuid())
  clerkId       String?   @unique
  email         String    @unique
  name          String?
  role          UserRole @default(user)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
 
 // Data relationships
  glucoseRuns       Run[]
  glucoseReadings   Reading[]
  
  // Caregiver relationships
  caregivers        CaregiverAccess[] @relation("PatientCaregivers")
  caregivingFor     CaregiverAccess[] @relation("CaregiverPatients")
}

enum UserRole {
  admin
  user
  caregiver
}

model CaregiverAccess {
  id              String    @id @default(uuid())
  patientId       String
  caregiverId     String
  status          AccessStatus @default(pending)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  // Relations
  patient         User      @relation("PatientCaregivers", fields: [patientId], references: [id])
  caregiver       User      @relation("CaregiverPatients", fields: [caregiverId], references: [id])
  
  // Unique constraint to prevent duplicate relationships
  @@unique([patientId, caregiverId])
}

enum AccessStatus {
  pending
  active
  revoked
}

model Run {
  id            String    @id @default(uuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  startDate     DateTime
  endDate       DateTime?
  glucoseReadings      Reading[]
  estimatedA1C  Float?
  notes         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Reading {
  id            String    @id @default(uuid())
  glucoseRunId         String
  glucoseRun           Run       @relation(fields: [glucoseRunId], references: [id])
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  glucoseValue  Float
  timestamp     DateTime
  mealContext   String?   // Before meal, After meal, Fasting, etc.
  notes         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Add this to your prisma/schema.prisma file

model FailedJob {
  id            String    @id @default(uuid())
  timestamp     DateTime  @default(now())
  processName   String
  data          Json
  failureReason String
  attemptsMade  Int
  stackTrace    String?
  retries       Int
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}
